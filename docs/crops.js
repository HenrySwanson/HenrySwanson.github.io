(()=>{"use strict";const e=JSON.parse('[{"name":"Blue Jazz","season":"Spring","seed_cost":30,"sell_price":50,"days_to_grow":7},{"name":"Carrot","season":"Spring","seed_cost":0,"sell_price":35,"days_to_grow":3},{"name":"Cauliflower","season":"Spring","seed_cost":80,"sell_price":175,"days_to_grow":12},{"name":"Coffee Bean","season":"Spring","multiseason":2,"seed_cost":15,"sell_price":15,"days_to_grow":10,"regrowth_period":2,"yield":4,"percent_chance_extra":2},{"name":"Garlic","season":"Spring","seed_cost":40,"sell_price":60,"days_to_grow":4},{"name":"Green Bean","season":"Spring","seed_cost":60,"sell_price":40,"days_to_grow":10,"regrowth_period":3},{"name":"Kale","season":"Spring","seed_cost":70,"sell_price":110,"days_to_grow":6},{"name":"Parsnip","season":"Spring","seed_cost":20,"sell_price":35,"days_to_grow":4},{"name":"Potato","season":"Spring","seed_cost":50,"sell_price":80,"days_to_grow":6,"percent_chance_extra":25},{"name":"Rhubarb","season":"Spring","seed_cost":100,"sell_price":220,"days_to_grow":13},{"name":"Rice","season":"Spring","seed_cost":40,"sell_price":30,"days_to_grow":6},{"name":"Strawberry","season":"Spring","seed_cost":100,"sell_price":120,"days_to_grow":8,"regrowth_period":4,"percent_chance_extra":2},{"name":"Tulip","season":"Spring","seed_cost":20,"sell_price":30,"days_to_grow":6},{"name":"Blueberry","season":"Summer","seed_cost":80,"sell_price":50,"days_to_grow":13,"regrowth_period":4,"yield":3,"percent_chance_extra":2},{"name":"Corn","season":"Summer","multiseason":2,"seed_cost":150,"sell_price":50,"days_to_grow":14,"regrowth_period":4},{"name":"Hops","season":"Summer","seed_cost":60,"sell_price":25,"days_to_grow":11,"regrowth_period":1},{"name":"Hot Pepper","season":"Summer","seed_cost":40,"sell_price":40,"days_to_grow":5,"regrowth_period":3,"percent_chance_extra":3},{"name":"Melon","season":"Summer","seed_cost":80,"sell_price":250,"days_to_grow":12},{"name":"Poppy","season":"Summer","seed_cost":100,"sell_price":140,"days_to_grow":7},{"name":"Radish","season":"Summer","seed_cost":40,"sell_price":90,"days_to_grow":6},{"name":"Red Cabbage","season":"Summer","seed_cost":100,"sell_price":260,"days_to_grow":9},{"name":"Starfruit","season":"Summer","seed_cost":400,"sell_price":750,"days_to_grow":13},{"name":"Summer Spangle","season":"Summer","seed_cost":50,"sell_price":90,"days_to_grow":8},{"name":"Summer Squash","season":"Summer","seed_cost":0,"sell_price":45,"days_to_grow":6},{"name":"Sunflower","season":"Summer","multiseason":2,"seed_cost":200,"sell_price":80,"days_to_grow":8},{"name":"Tomato","season":"Summer","seed_cost":50,"sell_price":60,"days_to_grow":11,"regrowth_period":4,"percent_chance_extra":5},{"name":"Wheat","season":"Summer","multiseason":2,"seed_cost":10,"sell_price":25,"days_to_grow":4},{"name":"Amaranth","season":"Fall","seed_cost":70,"sell_price":150,"days_to_grow":7},{"name":"Artichoke","season":"Fall","seed_cost":30,"sell_price":160,"days_to_grow":8},{"name":"Beet","season":"Fall","seed_cost":20,"sell_price":100,"days_to_grow":6},{"name":"Bok Choy","season":"Fall","seed_cost":50,"sell_price":80,"days_to_grow":4},{"name":"Broccoli","season":"Fall","seed_cost":0,"sell_price":70,"days_to_grow":8},{"name":"Cranberries","season":"Fall","seed_cost":240,"sell_price":75,"days_to_grow":7,"regrowth_period":5,"yield":2,"percent_chance_extra":10},{"name":"Eggplant","season":"Fall","seed_cost":20,"sell_price":60,"days_to_grow":5,"regrowth_period":5,"percent_chance_extra":0.2},{"name":"Fairy Rose","season":"Fall","seed_cost":200,"sell_price":290,"days_to_grow":12},{"name":"Grape","season":"Fall","seed_cost":60,"sell_price":80,"days_to_grow":10,"regrowth_period":3},{"name":"Pumpkin","season":"Fall","seed_cost":100,"sell_price":320,"days_to_grow":13},{"name":"Yam","season":"Fall","seed_cost":60,"sell_price":160,"days_to_grow":10},{"name":"Powdermelon","season":"Winter","seed_cost":0,"sell_price":60,"days_to_grow":7}]');var t;!function(e){e[e.SPRING=0]="SPRING",e[e.SUMMER=1]="SUMMER",e[e.FALL=2]="FALL",e[e.WINTER=3]="WINTER"}(t||(t={})),function(e){e.fromString=function(t){switch(t.toUpperCase()){case"SPRING":return e.SPRING;case"SUMMER":return e.SUMMER;case"FALL":return e.FALL;case"WINTER":return e.WINTER;default:throw new Error(`Unknown season ${t}`)}}}(t||(t={}));const o=1.25,r=1.5,s=2;function n(e,n){var a,i,l;let _=[],d=null!==(a=e.multiseason)&&void 0!==a?a:1;for(let o=0;o<d;o++)_.push(t.fromString(e.season).valueOf()+o);if(!_.includes(n.season))return"out-of-season";let c=28*(n.multiseason_enabled?_.length-_.indexOf(n.season):1)-n.start_day,m=0,p=0;if(c>=e.days_to_grow&&(m+=1,p+=e.days_to_grow,e.regrowth_period)){let t=Math.floor((c-e.days_to_grow)/e.regrowth_period);m+=t,p+=t*e.regrowth_period}let u,g=e.sell_price;if(n.quality_probabilities){let e=n.quality_probabilities;u=[[1,e.normal],[o,e.silver],[r,e.gold],[s,e.iridium]].map((([e,t])=>Math.trunc(e*g)*t)).reduce(((e,t)=>e+t))}else u=g;let w=(null!==(i=e.yield)&&void 0!==i?i:1)+(null!==(l=e.percent_chance_extra)&&void 0!==l?l:0)/100,y=(u+(w-1)*g)*m-e.seed_cost;return{definition:e,useful_days:p,num_harvests:m,num_crops:w*m,profit:y,daily_profit:y/p}}const a=[{name:"Name",cellText:e=>e.definition.name,compare:(e,t)=>e.definition.name.localeCompare(t.definition.name)},{name:"Seed Cost",cellText:e=>e.definition.seed_cost.toString(),compare:(e,t)=>e.definition.seed_cost-t.definition.seed_cost},{name:"Sell Price",cellText:e=>e.definition.sell_price.toString(),compare:(e,t)=>e.definition.sell_price-t.definition.sell_price},{name:"Days to Grow",cellText:e=>e.definition.days_to_grow.toString(),compare:(e,t)=>e.definition.days_to_grow-t.definition.days_to_grow},{name:"Regrowth Period",cellText:e=>{var t,o;return null!==(o=null===(t=e.definition.regrowth_period)||void 0===t?void 0:t.toString())&&void 0!==o?o:"-"},compare:(e,t)=>void 0===t.definition.regrowth_period?-1:void 0===e.definition.regrowth_period?1:e.definition.regrowth_period-t.definition.regrowth_period},{name:"Yield",cellText:e=>{var t;let o=null!==(t=e.definition.yield)&&void 0!==t?t:1;return e.definition.percent_chance_extra?`${o} + ${e.definition.percent_chance_extra}%`:o.toString()},compare:(e,t)=>{var o,r,s,n;return(null!==(o=e.definition.yield)&&void 0!==o?o:1)+(null!==(r=e.definition.percent_chance_extra)&&void 0!==r?r:0)/100-((null!==(s=t.definition.yield)&&void 0!==s?s:1)+(null!==(n=t.definition.percent_chance_extra)&&void 0!==n?n:0)/100)}},{name:"Useful Days",cellText:e=>e.useful_days.toString(),compare:(e,t)=>e.useful_days-t.useful_days},{name:"Num Harvests",cellText:e=>e.num_harvests.toString(),compare:(e,t)=>e.num_crops-t.num_crops},{name:"Num Crops",cellText:e=>{let t=e.num_crops;return Number.isInteger(t)?t.toString():e.num_crops.toFixed(2)},compare:(e,t)=>e.num_crops-t.num_crops},{name:"Profit",cellText:e=>e.profit.toFixed(2),compare:(e,t)=>e.profit-t.profit},{name:"Daily Profit",cellText:e=>Number.isFinite(e.daily_profit)?e.daily_profit.toFixed(2):"-",compare:(e,t)=>e.daily_profit-t.daily_profit}];class i{constructor(e,t){this.data=t,this.row=e;for(let e of a){let t=e.cellText(this.data);this.row.insertCell().appendChild(document.createTextNode(t))}}}function l(e){switch(e){case"ascending":return"descending";case"descending":return"ascending"}}class _{constructor(e){this.table=e,this.rows=[],this.current_sort=null,this.thead=this.table.createTHead(),this.tbody=this.table.createTBody();let t=this.thead.insertRow();for(let[e,o]of a.entries()){let r=t.insertCell();r.appendChild(document.createTextNode(o.name)),r.addEventListener("click",(t=>{let o;o=null!==this.current_sort&&this.current_sort[0]===e?l(this.current_sort[1]):"ascending",this.current_sort=[e,o];let r=this.thead.querySelectorAll("td");for(let e of r)e.removeAttribute("aria-sort");r[e].setAttribute("aria-sort",o),this.sortRows()}))}}repopulateTable(t){this.tbody.replaceChildren(),this.rows=[];for(let o of e){let e=n(o,t);if("out-of-season"==e)continue;let r=this.tbody.insertRow();this.rows.push(new i(r,e))}this.sortRows()}sortRows(){let e,t;null===this.current_sort?(e=0,t="ascending"):[e,t]=this.current_sort;let o=a[e];this.rows.sort(((e,r)=>{let s=o.compare(e.data,r.data);return"ascending"===t?s:-s}));for(let e of this.rows)this.tbody.appendChild(e.row)}}function d(){console.log("Initializing!");let e=document.getElementById("crop-table");if(!(e instanceof HTMLTableElement))throw new Error("crop-table should be a <table>");let o=document.getElementById("input-panel"),r=document.querySelector("#season"),s=document.querySelector("#day"),n=document.querySelector("#enable-multiseason"),a=document.querySelector("#enable-quality"),i=document.querySelector("#farmer-level"),l=new _(e);function d(){let e,o=function(e){let t=e/10*.2+(e+2)/12*0+.01,o=t/2;o=0;let r=1*t,s=(1-r)*Math.min(2*t,.75);return{normal:1-r-s,silver:s,gold:r,iridium:0}}(i.valueAsNumber),_=o.normal+1.25*o.silver+1.5*o.gold+2*o.iridium,d={season:t.fromString(r.value),start_day:s.valueAsNumber,multiseason_enabled:n.checked,quality_probabilities:a.checked?o:null};for(e in l.repopulateTable(d),document.documentElement.className=r.value.toLowerCase(),o){let t=document.getElementById(`percent-${e}`),r=100*o[e];t.textContent=`${r.toFixed(0)}%`}document.getElementById("average-quality").textContent=_.toFixed(2)}d(),o.addEventListener("change",(e=>{d()}))}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",d):d()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,