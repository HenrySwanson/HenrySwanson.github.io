(()=>{"use strict";const e=JSON.parse('[{"name":"Blue Jazz","season":"Spring","seed_cost":30,"sell_price":50,"days_to_grow":7},{"name":"Carrot","season":"Spring","seed_cost":0,"sell_price":35,"days_to_grow":3},{"name":"Cauliflower","season":"Spring","seed_cost":80,"sell_price":175,"days_to_grow":12},{"name":"Coffee Bean","season":"Spring","seed_cost":15,"sell_price":15,"days_to_grow":10,"regrowth_period":2,"yield":4,"percent_chance_extra":2},{"name":"Garlic","season":"Spring","seed_cost":40,"sell_price":60,"days_to_grow":4},{"name":"Green Bean","season":"Spring","seed_cost":60,"sell_price":40,"days_to_grow":10,"regrowth_period":3},{"name":"Kale","season":"Spring","seed_cost":70,"sell_price":110,"days_to_grow":6},{"name":"Parsnip","season":"Spring","seed_cost":20,"sell_price":35,"days_to_grow":4},{"name":"Potato","season":"Spring","seed_cost":50,"sell_price":80,"days_to_grow":6,"percent_chance_extra":25},{"name":"Rhubarb","season":"Spring","seed_cost":100,"sell_price":220,"days_to_grow":13},{"name":"Rice","season":"Spring","seed_cost":40,"sell_price":30,"days_to_grow":6},{"name":"Strawberry","season":"Spring","seed_cost":100,"sell_price":120,"days_to_grow":8,"regrowth_period":4,"percent_chance_extra":2},{"name":"Tulip","season":"Spring","seed_cost":20,"sell_price":30,"days_to_grow":6}]');var t;function r(e,r){var o,s,n,a,l;let i=28-r.start_day,c=0,d=0;if(i>=e.days_to_grow&&(c+=1,d+=e.days_to_grow,e.regrowth_period)){let t=Math.floor((i-e.days_to_grow)/e.regrowth_period);c+=t,d+=t*e.regrowth_period}let _=c*((null!==(o=e.yield)&&void 0!==o?o:1)+(null!==(s=e.percent_chance_extra)&&void 0!==s?s:0)/100),p=_*e.sell_price-e.seed_cost,u=p/d;return{name:e.name,season:t.fromString(e.season),seed_cost:e.seed_cost,sell_price:e.sell_price,days_to_grow:e.days_to_grow,regrowth_period:null!==(n=e.regrowth_period)&&void 0!==n?n:null,yield:null!==(a=e.yield)&&void 0!==a?a:null,percent_chance_extra:null!==(l=e.percent_chance_extra)&&void 0!==l?l:null,useful_days:d,num_harvests:c,num_crops:_,profit:p,daily_profit:u}}!function(e){e[e.SPRING=0]="SPRING",e[e.SUMMER=1]="SUMMER",e[e.FALL=2]="FALL"}(t||(t={})),function(e){e.fromString=function(t){switch(t.toUpperCase()){case"SPRING":return e.SPRING;case"SUMMER":return e.SUMMER;case"FALL":return e.FALL;default:throw new Error(`Unknown season ${t}`)}}}(t||(t={}));const o=[{name:"Name",cellText:e=>e.name,compare:(e,t)=>e.name.localeCompare(t.name)},{name:"Season",cellText:e=>t[e.season],compare:(e,t)=>e.season.valueOf()-t.season.valueOf()},{name:"Seed Cost",cellText:e=>e.seed_cost.toString(),compare:(e,t)=>e.seed_cost-t.seed_cost},{name:"Sell Price",cellText:e=>e.sell_price.toString(),compare:(e,t)=>e.sell_price-t.sell_price},{name:"Days to Grow",cellText:e=>e.days_to_grow.toString(),compare:(e,t)=>e.days_to_grow-t.days_to_grow},{name:"Regrowth Period",cellText:e=>{var t,r;return null!==(r=null===(t=e.regrowth_period)||void 0===t?void 0:t.toString())&&void 0!==r?r:"-"},compare:(e,t)=>null===t.regrowth_period?-1:null===e.regrowth_period?1:e.regrowth_period-t.regrowth_period},{name:"Yield",cellText:e=>{var t;let r=null!==(t=e.yield)&&void 0!==t?t:1;return e.percent_chance_extra?`${r} + ${e.percent_chance_extra}%`:r.toString()},compare:(e,t)=>{var r,o,s,n;return(null!==(r=e.yield)&&void 0!==r?r:1)+(null!==(o=e.percent_chance_extra)&&void 0!==o?o:0)/100-((null!==(s=t.yield)&&void 0!==s?s:1)+(null!==(n=t.percent_chance_extra)&&void 0!==n?n:0)/100)}},{name:"Useful Days",cellText:e=>e.useful_days.toString(),compare:(e,t)=>e.useful_days-t.useful_days},{name:"Num Harvests",cellText:e=>e.num_harvests.toString(),compare:(e,t)=>e.num_crops-t.num_crops},{name:"Num Crops",cellText:e=>{let t=e.num_crops;return Number.isInteger(t)?t.toString():e.num_crops.toFixed(2)},compare:(e,t)=>e.num_crops-t.num_crops},{name:"Profit",cellText:e=>e.profit.toFixed(2),compare:(e,t)=>e.profit-t.profit},{name:"Daily Profit",cellText:e=>Number.isFinite(e.daily_profit)?e.daily_profit.toFixed(2):"-",compare:(e,t)=>e.daily_profit-t.daily_profit}];class s{constructor(e,t){this.data=t,this.row=e;for(let e of o){let t=e.cellText(this.data);this.row.insertCell().appendChild(document.createTextNode(t))}}}function n(e){switch(e){case"ascending":return"descending";case"descending":return"ascending"}}class a{constructor(e){this.table=e,this.rows=[],this.current_sort=null,this.thead=this.table.createTHead(),this.tbody=this.table.createTBody();let t=this.thead.insertRow();for(let[e,r]of o.entries()){let o=t.insertCell();o.appendChild(document.createTextNode(r.name)),o.addEventListener("click",(t=>{let r;r=null!==this.current_sort&&this.current_sort[0]===e?n(this.current_sort[1]):"ascending",this.current_sort=[e,r];let o=this.thead.querySelectorAll("td");for(let e of o)console.log(this),e.removeAttribute("aria-sort");o[e].setAttribute("aria-sort",r),this.sortRows()}))}}repopulateTable(t){this.tbody.replaceChildren(),this.rows=[];for(let o of e){let e=r(o,t),n=this.tbody.insertRow();this.rows.push(new s(n,e))}this.sortRows()}sortRows(){if(null===this.current_sort)return;let[e,t]=this.current_sort,r=o[e];this.rows.sort(((e,o)=>{let s=r.compare(e.data,o.data);return"ascending"===t?s:-s}));for(let e of this.rows)this.tbody.appendChild(e.row)}}function l(){console.log("Initializing!");let e=document.getElementById("crop-table");if(!(e instanceof HTMLTableElement))throw new Error("crop-table should be a <table>");let t=document.getElementById("input-panel"),r=document.querySelector("#day");function o(){return{start_day:r.valueAsNumber}}let s=new a(e);s.repopulateTable(o()),t.addEventListener("change",(e=>{s.repopulateTable(o())}))}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",l):l()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,