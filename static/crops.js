(()=>{"use strict";var e;!function(e){e[e.SPRING=0]="SPRING",e[e.SUMMER=1]="SUMMER",e[e.FALL=2]="FALL"}(e||(e={}));let t=[new class{constructor(e,t,n,o,r,d,l,a){this.name=e,this.season=t,this.seed_cost=n,this.days_to_grow=o,this.regrowth_period=r,this.sell_price=d,this.crop_yield=l,this.percent_chance_extra=a}}("Parsnip",e.SPRING,20,4,null,35,1,0)],n=["Name","Season","Seed Cost"];function o(){console.log("Hydrating!");let e=document.getElementById("crop-table");if(!(e instanceof HTMLTableElement))throw new Error("crop-table should be a <table>");e.replaceChildren();let o=e.createTHead().insertRow();for(let e of n)o.insertCell().appendChild(document.createTextNode(e));let r=e.createTBody();for(let e of t){let t=r.insertRow();t.insertCell().appendChild(document.createTextNode(e.name)),t.insertCell().appendChild(document.createTextNode(e.season.toString())),t.insertCell().appendChild(document.createTextNode(e.seed_cost.toString()))}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",o):o()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JvcHMuanMiLCJtYXBwaW5ncyI6Im1CQUVBLElBQUtBLEdBQUwsU0FBS0EsR0FDRCx1QkFBUSx1QkFBUSxrQkFDbkIsQ0FGRCxDQUFLQSxJQUFBQSxFQUFNLEtBbUJYLElBSUlDLEVBQVEsQ0FKRSxJQWZkLE1BQ0ksV0FBQUMsQ0FDb0JDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEdBUEEsS0FBQVAsS0FBQUEsRUFDQSxLQUFBQyxPQUFBQSxFQUNBLEtBQUFDLFVBQUFBLEVBQ0EsS0FBQUMsYUFBQUEsRUFDQSxLQUFBQyxnQkFBQUEsRUFDQSxLQUFBQyxXQUFBQSxFQUNBLEtBQUFDLFdBQUFBLEVBQ0EsS0FBQUMscUJBQUFBLENBRXBCLEdBS0EsVUFDQVYsRUFBT1csT0FBUSxHQUFJLEVBQUcsS0FBTSxHQUFJLEVBQUcsSUFJbkNDLEVBQVMsQ0FBQyxPQUFRLFNBQVUsYUFFaEMsU0FBU0MsSUFDTEMsUUFBUUMsSUFBSSxjQUNaLElBQUlDLEVBQVFDLFNBQVNDLGVBQWUsY0FDcEMsS0FBTUYsYUFBaUJHLGtCQUNuQixNQUFNLElBQUlDLE1BQU0sa0NBR3BCSixFQUFNSyxrQkFHTixJQUNJQyxFQURRTixFQUFNTyxjQUNGQyxZQUNoQixJQUFLLElBQUlDLEtBQU9iLEVBQ1pVLEVBQUlJLGFBQWFDLFlBQVlWLFNBQVNXLGVBQWVILElBR3pELElBQUlJLEVBQVFiLEVBQU1jLGNBQ2xCLElBQUssSUFBSUMsS0FBUTlCLEVBQU8sQ0FDcEIsSUFBSXFCLEVBQU1PLEVBQU1MLFlBQ2hCRixFQUFJSSxhQUFhQyxZQUFZVixTQUFTVyxlQUFlRyxFQUFLNUIsT0FDMURtQixFQUFJSSxhQUFhQyxZQUFZVixTQUFTVyxlQUFlRyxFQUFLM0IsT0FBTzRCLGFBQ2pFVixFQUFJSSxhQUFhQyxZQUFZVixTQUFTVyxlQUFlRyxFQUFLMUIsVUFBVTJCLFlBQ3hFLENBQ0osQ0FHNEIsWUFBeEJmLFNBQVNnQixXQUVUaEIsU0FBU2lCLGlCQUFpQixtQkFBb0JyQixHQUc5Q0EsRyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jcm9wcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmVudW0gU2Vhc29uIHtcclxuICAgIFNQUklORywgU1VNTUVSLCBGQUxMXHJcbn1cclxuXHJcbmNsYXNzIENyb3Age1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZyxcclxuICAgICAgICBwdWJsaWMgcmVhZG9ubHkgc2Vhc29uOiBTZWFzb24sXHJcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IHNlZWRfY29zdDogbnVtYmVyLFxyXG4gICAgICAgIHB1YmxpYyByZWFkb25seSBkYXlzX3RvX2dyb3c6IG51bWJlcixcclxuICAgICAgICBwdWJsaWMgcmVhZG9ubHkgcmVncm93dGhfcGVyaW9kOiBudW1iZXIgfCBudWxsLFxyXG4gICAgICAgIHB1YmxpYyByZWFkb25seSBzZWxsX3ByaWNlOiBudW1iZXIsXHJcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IGNyb3BfeWllbGQ6IG51bWJlcixcclxuICAgICAgICBwdWJsaWMgcmVhZG9ubHkgcGVyY2VudF9jaGFuY2VfZXh0cmE6IG51bWJlcixcclxuICAgICkge1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBFeGFtcGxlIGNyb3BcclxubGV0IHBhcnNuaXAgPSBuZXcgQ3JvcChcclxuICAgIFwiUGFyc25pcFwiLFxyXG4gICAgU2Vhc29uLlNQUklORywgMjAsIDQsIG51bGwsIDM1LCAxLCAwXHJcbik7XHJcbmxldCBjcm9wcyA9IFtwYXJzbmlwXTtcclxuXHJcbmxldCBIRUFERVIgPSBbXCJOYW1lXCIsIFwiU2Vhc29uXCIsIFwiU2VlZCBDb3N0XCJdO1xyXG5cclxuZnVuY3Rpb24gaHlkcmF0ZVRhYmxlKCkge1xyXG4gICAgY29uc29sZS5sb2coXCJIeWRyYXRpbmchXCIpO1xyXG4gICAgbGV0IHRhYmxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjcm9wLXRhYmxlXCIpO1xyXG4gICAgaWYgKCEodGFibGUgaW5zdGFuY2VvZiBIVE1MVGFibGVFbGVtZW50KSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImNyb3AtdGFibGUgc2hvdWxkIGJlIGEgPHRhYmxlPlwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0YWJsZS5yZXBsYWNlQ2hpbGRyZW4oKTtcclxuXHJcbiAgICAvLyBUYWJsZSBoZWFkZXJcclxuICAgIGxldCB0aGVhZCA9IHRhYmxlLmNyZWF0ZVRIZWFkKCk7XHJcbiAgICBsZXQgcm93ID0gdGhlYWQuaW5zZXJ0Um93KCk7XHJcbiAgICBmb3IgKGxldCBrZXkgb2YgSEVBREVSKSB7XHJcbiAgICAgICAgcm93Lmluc2VydENlbGwoKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShrZXkpKTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgdGJvZHkgPSB0YWJsZS5jcmVhdGVUQm9keSgpO1xyXG4gICAgZm9yIChsZXQgY3JvcCBvZiBjcm9wcykge1xyXG4gICAgICAgIGxldCByb3cgPSB0Ym9keS5pbnNlcnRSb3coKTtcclxuICAgICAgICByb3cuaW5zZXJ0Q2VsbCgpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNyb3AubmFtZSkpO1xyXG4gICAgICAgIHJvdy5pbnNlcnRDZWxsKCkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3JvcC5zZWFzb24udG9TdHJpbmcoKSkpO1xyXG4gICAgICAgIHJvdy5pbnNlcnRDZWxsKCkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3JvcC5zZWVkX2Nvc3QudG9TdHJpbmcoKSkpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBIeWRyYXRlIHRoZSB0YWJsZVxyXG5pZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJsb2FkaW5nXCIpIHtcclxuICAgIC8vIExvYWRpbmcgaGFzbid0IGZpbmlzaGVkIHlldFxyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgaHlkcmF0ZVRhYmxlKTtcclxufSBlbHNlIHtcclxuICAgIC8vIGBET01Db250ZW50TG9hZGVkYCBoYXMgYWxyZWFkeSBmaXJlZFxyXG4gICAgaHlkcmF0ZVRhYmxlKCk7XHJcbn0iXSwibmFtZXMiOlsiU2Vhc29uIiwiY3JvcHMiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJzZWFzb24iLCJzZWVkX2Nvc3QiLCJkYXlzX3RvX2dyb3ciLCJyZWdyb3d0aF9wZXJpb2QiLCJzZWxsX3ByaWNlIiwiY3JvcF95aWVsZCIsInBlcmNlbnRfY2hhbmNlX2V4dHJhIiwiU1BSSU5HIiwiSEVBREVSIiwiaHlkcmF0ZVRhYmxlIiwiY29uc29sZSIsImxvZyIsInRhYmxlIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIkhUTUxUYWJsZUVsZW1lbnQiLCJFcnJvciIsInJlcGxhY2VDaGlsZHJlbiIsInJvdyIsImNyZWF0ZVRIZWFkIiwiaW5zZXJ0Um93Iiwia2V5IiwiaW5zZXJ0Q2VsbCIsImFwcGVuZENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJ0Ym9keSIsImNyZWF0ZVRCb2R5IiwiY3JvcCIsInRvU3RyaW5nIiwicmVhZHlTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9