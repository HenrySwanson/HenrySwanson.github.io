(()=>{"use strict";const e=JSON.parse('[{"name":"Blue Jazz","season":"Spring","seed_cost":30,"sell_price":50,"days_to_grow":7},{"name":"Carrot","season":"Spring","seed_cost":0,"sell_price":35,"days_to_grow":3},{"name":"Cauliflower","season":"Spring","seed_cost":80,"sell_price":175,"days_to_grow":12},{"name":"Coffee Bean","season":"Spring","multiseason":2,"seed_cost":15,"sell_price":15,"days_to_grow":10,"regrowth_period":2,"yield":4,"percent_chance_extra":2},{"name":"Garlic","season":"Spring","seed_cost":40,"sell_price":60,"days_to_grow":4},{"name":"Green Bean","season":"Spring","seed_cost":60,"sell_price":40,"days_to_grow":10,"regrowth_period":3},{"name":"Kale","season":"Spring","seed_cost":70,"sell_price":110,"days_to_grow":6},{"name":"Parsnip","season":"Spring","seed_cost":20,"sell_price":35,"days_to_grow":4},{"name":"Potato","season":"Spring","seed_cost":50,"sell_price":80,"days_to_grow":6,"percent_chance_extra":25},{"name":"Rhubarb","season":"Spring","seed_cost":100,"sell_price":220,"days_to_grow":13},{"name":"Rice","season":"Spring","seed_cost":40,"sell_price":30,"days_to_grow":6},{"name":"Strawberry","season":"Spring","seed_cost":100,"sell_price":120,"days_to_grow":8,"regrowth_period":4,"percent_chance_extra":2},{"name":"Tulip","season":"Spring","seed_cost":20,"sell_price":30,"days_to_grow":6},{"name":"Blueberry","season":"Summer","seed_cost":80,"sell_price":50,"days_to_grow":13,"regrowth_period":4,"yield":3,"percent_chance_extra":2},{"name":"Corn","season":"Summer","multiseason":2,"seed_cost":150,"sell_price":50,"days_to_grow":14,"regrowth_period":4},{"name":"Hops","season":"Summer","seed_cost":60,"sell_price":25,"days_to_grow":11,"regrowth_period":1},{"name":"Hot Pepper","season":"Summer","seed_cost":40,"sell_price":40,"days_to_grow":5,"regrowth_period":3,"percent_chance_extra":3},{"name":"Melon","season":"Summer","seed_cost":80,"sell_price":250,"days_to_grow":12},{"name":"Poppy","season":"Summer","seed_cost":100,"sell_price":140,"days_to_grow":7},{"name":"Radish","season":"Summer","seed_cost":40,"sell_price":90,"days_to_grow":6},{"name":"Red Cabbage","season":"Summer","seed_cost":100,"sell_price":260,"days_to_grow":9},{"name":"Starfruit","season":"Summer","seed_cost":400,"sell_price":750,"days_to_grow":13},{"name":"Summer Spangle","season":"Summer","seed_cost":50,"sell_price":90,"days_to_grow":8},{"name":"Summer Squash","season":"Summer","seed_cost":0,"sell_price":45,"days_to_grow":6},{"name":"Sunflower","season":"Summer","multiseason":2,"seed_cost":200,"sell_price":80,"days_to_grow":8},{"name":"Tomato","season":"Summer","seed_cost":50,"sell_price":60,"days_to_grow":11,"regrowth_period":4,"percent_chance_extra":5},{"name":"Wheat","season":"Summer","multiseason":2,"seed_cost":10,"sell_price":25,"days_to_grow":4},{"name":"Amaranth","season":"Fall","seed_cost":70,"sell_price":150,"days_to_grow":7},{"name":"Artichoke","season":"Fall","seed_cost":30,"sell_price":160,"days_to_grow":8},{"name":"Beet","season":"Fall","seed_cost":20,"sell_price":100,"days_to_grow":6},{"name":"Bok Choy","season":"Fall","seed_cost":50,"sell_price":80,"days_to_grow":4},{"name":"Broccoli","season":"Fall","seed_cost":0,"sell_price":70,"days_to_grow":8},{"name":"Cranberries","season":"Fall","seed_cost":240,"sell_price":75,"days_to_grow":7,"regrowth_period":5,"yield":2,"percent_chance_extra":10},{"name":"Eggplant","season":"Fall","seed_cost":20,"sell_price":60,"days_to_grow":5,"regrowth_period":5,"percent_chance_extra":0.2},{"name":"Fairy Rose","season":"Fall","seed_cost":200,"sell_price":290,"days_to_grow":12},{"name":"Grape","season":"Fall","seed_cost":60,"sell_price":80,"days_to_grow":10,"regrowth_period":3},{"name":"Pumpkin","season":"Fall","seed_cost":100,"sell_price":320,"days_to_grow":13},{"name":"Yam","season":"Fall","seed_cost":60,"sell_price":160,"days_to_grow":10},{"name":"Powdermelon","season":"Winter","seed_cost":0,"sell_price":60,"days_to_grow":7}]');var o;!function(e){e[e.SPRING=0]="SPRING",e[e.SUMMER=1]="SUMMER",e[e.FALL=2]="FALL",e[e.WINTER=3]="WINTER"}(o||(o={})),function(e){e.fromString=function(o){switch(o.toUpperCase()){case"SPRING":return e.SPRING;case"SUMMER":return e.SUMMER;case"FALL":return e.FALL;case"WINTER":return e.WINTER;default:throw new Error(`Unknown season ${o}`)}}}(o||(o={}));const t=1.25,s=1.5,r=2;function n(e,n){var a,i,l;const c=[],_=null!==(a=e.multiseason)&&void 0!==a?a:1;for(let t=0;t<_;t++)c.push(o.fromString(e.season).valueOf()+t);if(!c.includes(n.season))return"out-of-season";const d=28*(n.multiseason_enabled?c.length-c.indexOf(n.season):1)-n.start_day;let m=0,p=0;if(d>=e.days_to_grow&&(m+=1,p+=e.days_to_grow,e.regrowth_period)){const o=Math.floor((d-e.days_to_grow)/e.regrowth_period);m+=o,p+=o*e.regrowth_period}const u=e.sell_price;let g;if(n.quality_probabilities){const e=n.quality_probabilities;g=[[1,e.normal],[t,e.silver],[s,e.gold],[r,e.iridium]].map((([e,o])=>Math.trunc(e*u)*o)).reduce(((e,o)=>e+o))}else g=u;const w=(null!==(i=e.yield)&&void 0!==i?i:1)+(null!==(l=e.percent_chance_extra)&&void 0!==l?l:0)/100,y=(g+(w-1)*u)*m-e.seed_cost;return{definition:e,useful_days:p,num_harvests:m,num_crops:w*m,profit:y,daily_profit:y/p}}const a=[{name:"Name",cellText:e=>e.definition.name,compare:(e,o)=>e.definition.name.localeCompare(o.definition.name)},{name:"Seed Cost",cellText:e=>e.definition.seed_cost.toString(),compare:(e,o)=>e.definition.seed_cost-o.definition.seed_cost},{name:"Sell Price",cellText:e=>e.definition.sell_price.toString(),compare:(e,o)=>e.definition.sell_price-o.definition.sell_price},{name:"Days to Grow",cellText:e=>e.definition.days_to_grow.toString(),compare:(e,o)=>e.definition.days_to_grow-o.definition.days_to_grow},{name:"Regrowth Period",cellText:e=>{var o,t;return null!==(t=null===(o=e.definition.regrowth_period)||void 0===o?void 0:o.toString())&&void 0!==t?t:"-"},compare:(e,o)=>void 0===o.definition.regrowth_period?-1:void 0===e.definition.regrowth_period?1:e.definition.regrowth_period-o.definition.regrowth_period},{name:"Yield",cellText:e=>{var o;const t=null!==(o=e.definition.yield)&&void 0!==o?o:1;return e.definition.percent_chance_extra?`${t} + ${e.definition.percent_chance_extra}%`:t.toString()},compare:(e,o)=>{var t,s,r,n;return(null!==(t=e.definition.yield)&&void 0!==t?t:1)+(null!==(s=e.definition.percent_chance_extra)&&void 0!==s?s:0)/100-((null!==(r=o.definition.yield)&&void 0!==r?r:1)+(null!==(n=o.definition.percent_chance_extra)&&void 0!==n?n:0)/100)}},{name:"Useful Days",cellText:e=>e.useful_days.toString(),compare:(e,o)=>e.useful_days-o.useful_days},{name:"Num Harvests",cellText:e=>e.num_harvests.toString(),compare:(e,o)=>e.num_crops-o.num_crops},{name:"Num Crops",cellText:e=>{const o=e.num_crops;return Number.isInteger(o)?o.toString():e.num_crops.toFixed(2)},compare:(e,o)=>e.num_crops-o.num_crops},{name:"Profit",cellText:e=>e.profit.toFixed(2),compare:(e,o)=>e.profit-o.profit},{name:"Daily Profit",cellText:e=>Number.isFinite(e.daily_profit)?e.daily_profit.toFixed(2):"-",compare:(e,o)=>e.daily_profit-o.daily_profit}];class i{constructor(e,o){this.data=o,this.row=e;for(const e of a){const o=e.cellText(this.data);this.row.insertCell().appendChild(document.createTextNode(o))}}}function l(e){switch(e){case"ascending":return"descending";case"descending":return"ascending"}}class c{constructor(e){this.table=e,this.rows=[],this.current_sort=null,this.thead=this.table.createTHead(),this.tbody=this.table.createTBody();const o=this.thead.insertRow();for(const[e,t]of a.entries()){const s=o.insertCell();s.appendChild(document.createTextNode(t.name)),s.addEventListener("click",(()=>{let o;o=null!==this.current_sort&&this.current_sort[0]===e?l(this.current_sort[1]):"ascending",this.current_sort=[e,o];const t=this.thead.querySelectorAll("td");for(const e of t)e.removeAttribute("aria-sort");t[e].setAttribute("aria-sort",o),this.sortRows()}))}}repopulateTable(o){this.tbody.replaceChildren(),this.rows=[];for(const t of e){const e=n(t,o);if("out-of-season"==e)continue;const s=this.tbody.insertRow();this.rows.push(new i(s,e))}this.sortRows()}sortRows(){let e,o;null===this.current_sort?(e=0,o="ascending"):[e,o]=this.current_sort;const t=a[e];this.rows.sort(((e,s)=>{const r=t.compare(e.data,s.data);return"ascending"===o?r:-r}));for(const e of this.rows)this.tbody.appendChild(e.row)}}function _(){console.log("Initializing!");const e=document.getElementById("crop-table");if(!(e instanceof HTMLTableElement))throw new Error("crop-table should be a <table>");const t=document.getElementById("input-panel"),s=document.querySelector("#season"),r=document.querySelector("#day"),n=document.querySelector("#enable-multiseason"),a=document.querySelector("#enable-quality"),i=document.querySelector("#farmer-level"),l=new c(e);function _(){const e=function(e){const o=e/10*.2+(e+2)/12*0+.01;let t=o/2;t=0;const s=1*o,r=(1-s)*Math.min(2*o,.75);return{normal:1-s-r,silver:r,gold:s,iridium:0}}(i.valueAsNumber),t=e.normal+1.25*e.silver+1.5*e.gold+2*e.iridium,c={season:o.fromString(s.value),start_day:r.valueAsNumber,multiseason_enabled:n.checked,quality_probabilities:a.checked?e:null};let _;for(_ in l.repopulateTable(c),document.documentElement.className=s.value.toLowerCase(),e){const o=document.getElementById(`percent-${_}`),t=100*e[_];o.textContent=`${t.toFixed(0)}%`}document.getElementById("average-quality").textContent=t.toFixed(2)}_(),t.addEventListener("change",(e=>{_()}))}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",_):_()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,